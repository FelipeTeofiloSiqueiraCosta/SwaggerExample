{
  "openapi": "3.0.0",
  "info": {
    "title": "ZAP Documentation",
    "description": "This is an API ZAP",
    "version": "1.0.0",
    "contact": {
      "email": "teste@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "http://api.example.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "description": "Create a new User",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "User name sample",
                  "email": "email@example.com",
                  "password": "Strong password"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Name, email and password are required."
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser"
                }
              }
            }
          },
          "500": {
            "description": "Category Already Exists"
          }
        }
      }
    },
    "/users/authenticate": {
      "post": {
        "tags": ["User"],
        "summary": "Authenticate User",
        "description": "Login users",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Valid Email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found with email {email}"
          },
          "400": {
            "description": "Invalid email provided"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": ["Message"],
        "summary": "Create Message",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new Message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": ["message", "title"],
                "example": {
                  "message": "Content message sample",
                  "title": "Title sample"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Invalid token."
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "Item UUID Sample"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data. message and title are required."
          }
        }
      },
      "get": {
        "tags": ["Message"],
        "summary": "List Messages",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List All Messages",
        "responses": {
          "401": {
            "description": "Invalid token."
          },
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayMessage"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{itemId}": {
      "get": {
        "tags": ["Message"],
        "summary": "Find By ItemId",
        "parameters": [
          {
            "in": "path",
            "name": "itemId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Message ItemId"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Find Message By ItemId",
        "responses": {
          "401": {
            "description": "Invalid token."
          },
          "404": {
            "description": "Item not found with id {itemId}"
          },
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/funnels": {
      "post": {
        "tags": ["Funnel"],
        "summary": "Create Funnel",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new Funnel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created"
          },
          "500": {
            "description": "Category Already Exists"
          }
        }
      },
      "get": {
        "tags": ["Funnel"],
        "summary": "List Funnels",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List All Funnels",
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": ["Document"],
        "summary": "Create Document",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new Document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created"
          },
          "500": {
            "description": "Category Already Exists"
          }
        }
      },
      "get": {
        "tags": ["Document"],
        "summary": "List Documents",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "List All Documents",
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audios": {
      "post": {
        "tags": ["Audio"],
        "summary": "Create Audio",
        "description": "Create a new Audio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created"
          },
          "500": {
            "description": "Category Already Exists"
          }
        }
      },
      "get": {
        "tags": ["Audio"],
        "summary": "List Audios",
        "description": "List All Audios",
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/medias": {
      "post": {
        "tags": ["Media"],
        "summary": "Create Media",
        "description": "Create a new Media",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created"
          },
          "500": {
            "description": "Category Already Exists"
          }
        }
      },
      "get": {
        "tags": ["Media"],
        "summary": "List Medias",
        "description": "List All Medias",
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "description": "User token generated by route Login",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },

    "schemas": {
      "ArrayMessage": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Message UUID"
            },
            "content": {
              "type": "string"
            },
            "itemId": {
              "type": "string"
            },
            "ownerId": {
              "type": "string"
            },
            "itemRefer": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item Id"
                },
                "name": {
                  "type": "string",
                  "description": "Item Name"
                },
                "type": {
                  "type": "string",
                  "description": "Type Message"
                },
                "archived": {
                  "type": "boolean",
                  "description": "achived true or false"
                },
                "ownerId": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User UUID"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "description": "Hash password"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      }
    }
  }
}
